name: Reusable workflow that releases a flavor

on:
  workflow_call:
    inputs:
      base_image:
        required: true
        type: string
      model:
        required: false
        type: string
        default: "generic"
      variant:
        required: false
        type: string
        default: "core"
      arch:
        required: false
        type: string
        default: "amd64"
      kubernetes_version:
        required: false
        type: string
      trusted_boot:
        required: false
        type: string
        default: "false"

jobs:
  release:
    runs-on: ${{ inputs.arch == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    name: ${{ inputs.base_image }}
    permissions:
      id-token: write
      contents: write
      actions: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Split base image
        id: split
        run: |
          # All of this becuase opensuse/leap:15.6 has to be pushed to the opensuse repo instead of having opensuse-leap and opensuse-tumbleweed...
          base_image=$(echo "${{ inputs.base_image }}" | cut -d ':' -f 1)
          tag=$(echo "${{ inputs.base_image }}" | cut -d ':' -f 2 || echo 'latest')

          # Check if the base image contains a slash
          if [[ "$base_image" == *"/"* ]]; then
            # Split the base image into distro and sub-distro
            distro=$(echo "$base_image" | cut -d '/' -f 1)
            sub_distro=$(echo "$base_image" | cut -d '/' -f 2)
            # Combine sub-distro and tag
            tag="$sub_distro-$tag"
          else
            # Use the base image as the distro
            distro="$base_image"
          fi

          echo "flavor=$distro" >> $GITHUB_OUTPUT
          echo "flavor_release=$tag" >> $GITHUB_OUTPUT
      - name: Set Image Tag
        run: |
          # Replace + with - in kubernetes version as we use it in the image tag
          # WORKAROUND: remove the first v from the kubernetes version as kairos-init is adding one for some reason
          # Should be fixed on kairos-init 0.2.4
          sanitized_kubernetes_version=$(echo "${{ inputs.kubernetes_version }}" | sed 's/^v//; s/+/-/g')
          if [ -n "${sanitized_kubernetes_version}" ]; then
            echo "IMAGE_TAG=quay.io/kairos/${{ steps.split.outputs.flavor }}:${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}-${{ inputs.arch }}-${{ inputs.model }}-${{ github.ref_name }}-k3s${sanitized_kubernetes_version}${{ inputs.trusted_boot != 'false' && '-uki' || '' }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=quay.io/kairos/${{ steps.split.outputs.flavor }}:${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}-${{ inputs.arch }}-${{ inputs.model }}-${{ github.ref_name }}${{ inputs.trusted_boot != 'false' && '-uki' || '' }}" >> $GITHUB_ENV
          fi
          echo "FIXED_KUBERNETES_VERSION=$(echo "${{ inputs.kubernetes_version }}" | sed 's/^v//g')" >> $GITHUB_ENV
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Login to Quay Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Build the docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: images/Dockerfile
          platforms: linux/${{ inputs.arch }}
          load: true
          tags: ${{ env.IMAGE_TAG }}
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            MODEL=${{ inputs.model }}
            VARIANT=${{ inputs.variant }}
            KUBERNETES_VERSION=${{ env.FIXED_KUBERNETES_VERSION }}
            TRUSTED_BOOT=${{ inputs.trusted_boot }}
      - name: Grype table
        uses: anchore/scan-action@v6.1.0
        with:
          image: ${{ env.IMAGE_TAG }}
          output-format: table
          severity-cutoff: critical
          add-cpes-if-none: true
          only-fixed: true
      - name: Grype sarif
        uses: anchore/scan-action@v6.1.0
        with:
          image: ${{ env.IMAGE_TAG }}
          output-format: sarif
          output-file: grype.sarif
          severity-cutoff: critical
          add-cpes-if-none: true
          only-fixed: true
      - name: Trivy
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ${{ env.IMAGE_TAG }}
          format: sarif
          output: trivy.sarif
          severity: CRITICAL
          limit-severities-for-sarif: true
      - name: Push the docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: images/Dockerfile
          platforms: linux/${{ inputs.arch }}
          push: true
          sbom: true
          tags: ${{ env.IMAGE_TAG }}
          build-args: |
            BASE_IMAGE=${{ inputs.base_image }}
            MODEL=${{ inputs.model }}
            VARIANT=${{ inputs.variant }}
            KUBERNETES_VERSION=${{ env.FIXED_KUBERNETES_VERSION }}
            TRUSTED_BOOT=${{ inputs.trusted_boot }}
      - name: Build iso ðŸ“¦
        if: ${{ inputs.trusted_boot == 'false' }}
        run: |
          mkdir release
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          -v $PWD/release:/output \
          quay.io/kairos/auroraboot:latest --debug build-iso --output /output/ \
          --name kairos-${{ steps.split.outputs.flavor }}-${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}-${{ inputs.arch }}-${{ github.ref_name }}${{ inputs.kubernetes_version && '-'||''}}${{ inputs.kubernetes_version || ''}} \
          docker:${{ env.IMAGE_TAG }}
      - name: Sign image
        env:
          COSIGN_YES: true
        run: |
          cosign sign ${{ env.IMAGE_TAG }}
      - name: Sign ISO sha files
        env:
          COSIGN_YES: true
        run: |
          filename=$(ls release/*.iso.sha256)
          cosign sign-blob --yes --output-certificate="${filename}.pem" --output-signature="${filename}.sig" "${filename}"
      - uses: itxaka/sarif-filter@v1
        with:
          input: grype.sarif
          output: grype.sarif
          severity: critical
      - uses: itxaka/sarif-filter@v1
        with:
          input: trivy.sarif
          output: trivy.sarif
          severity: critical
      - name: Fix permissions in release dir # Fix this in aurora, generated artifacts should have the right permissions
        run: sudo chmod -R 777 release
      - name: Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          files: |
            release/*
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy.sarif'
          category: ${{ steps.split.outputs.flavor }}-${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}-${{ inputs.arch }}-${{ inputs.model }}${{ inputs.trusted_boot != 'false' && '-uki' || '' }}
      - name: Upload Grype scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'grype.sarif'
          category: ${{ steps.split.outputs.flavor }}-${{ steps.split.outputs.flavor_release }}-${{ inputs.variant }}-${{ inputs.arch }}-${{ inputs.model }}${{ inputs.trusted_boot != 'false' && '-uki' || '' }}
